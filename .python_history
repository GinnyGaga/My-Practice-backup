print 'Hello World'
print'Hello World'
print 'Hello World'
clear
print 'Hello World'
print ('Hello World')
vim
print ('Hello World')
vim helloworld.py
help('print')
vim var.py
2+3
3*6
10000*5252
help(printMax)
help(print)
help
help(DocStrings)
help DocStrings
help __doc__
import using_name
import sys.py
import sys
dir(sys)
a=5
dir()
del a
dir()
help (int)
Library Reference>Built-in Functions
help(Library Reference>Built-in Functions)
man Library Reference>Built-in Functions
Built-in Functions)
dir(Library Reference)
dir(Built-in Functions)
dir()
dir(sys)
import Library Reference>Built-in Functions
import sys
dir(sys)
dir(print)
help(print)
help(list)
help(str)
help(os)
help(file)
help(os)
s=input('Enter something -->')
 Traceback (most recent call last):
s=input('Enter something -->')
 Traceback (most recent call last):
try_except.py
python try_except.py
help(sys.exit)
import sys
help(sys.exit)
import sys
sys.version
help(sys.stdin)
flag=True
if flag:print ('yes')
pow
help(pow)
8%4
help(pow)
help(power)
help(pow)
3%4
2**3%4
2**3 % 4
def powersum(power,*args):
'''Return the sum of each argument raised to specified power.'''
def powersum(power,*args):
 'Return the sum of each argument raised to specified power.'
 total = 0
 for i in args:
	total += pow(i,power)
def powersum(power,*args):
 total += 0
 for i in args:
def powersum(power,*args):
 'Return the sum of each argument raised to specified power.'
 total=0
 for i in args:
     total += pow(i,power)
 return total
powersum(2,3,4)
powersum(2,10)
 total=0
exec 'print ('Hello World')'
exec 'print ("Hello World")'
exec 'print"Hello World"'
exec ('print"Hello World"')
exec ('print("Hello World")')
eval('2*3')
mylist=['item']
assert len(mylist) >=1
mylist.pop()
assert len(mylist) >=1
i=[]
i.append('item')
`i`
'i'
(`i`)
print ('hello world')
print("llssl")
3+4
help(set)
vim
help(vim)
print ('HEll')
exit()
print('i love you','and you?')
300
print(300)
print(300+200)
print('300+200=',300+200)
print('300+200='300+200)
print('300+200=',300+200)
print('300 + 200 = ',300+200)
name=input()
ginny
name
print(name)
name=input()
print('hello',name)
ginny
name=input()
ginny
print('hello',name)
name=input(please enter your name:)
name=input('please enter your name:')
ginny
print ('hello',name)
print('1024+768=',1024+768)
print('1024*768=',1024*768)
data=input()
1024*768
print(1024*768)
print(i'm ok)
print('i'm ok')
print('i\'m ok')
print'i'm ok")
print("i'm ok")
\
print ('\')
print ('\\')
print('i\'m learning\npython.')
print(''\\\n\\)
print(''\\\n\\')
print('\\\n\\')
print('\\\t\\')
print(r'\\\t\\')
print('''line1)
line2
line3''')
print(r'''line1)
line2
line3''')
3>2
3<3
True
False
True and True
True and False
False and False
3>1 and 3<0
Ture or False
True or False
a=100
print(a)
PI
3/1
10/3
10//2
1/3
1//3
1%3
n = 123
print(n)
f = 456.789
print(f)
s1='Hello,world'
print(s1)
s1='hello,\'Adam\''
print(s1)
s3=r'hello."Bart"'
print(s3)
s3='hello."Bart"'
print(s3)
s4=r'''hello,
Lisa!'''
print(s4)
s4=r'''hello,
print(s3)
Lisa!'''
s1='\'hello,world\''
print(s1)
s2='\'hello,\\\'Adam\\\''
print(s2)
s2='\'hello,\\\'Adam\\\'\''
print(s2)
s3=r'hello,"Brat"'
print(s3)
s3=\r'hello,"Brat"'
s3=r'r'hello,"Brat"''
print(r's3=r'hello,"Brat"'')
print(s3=r'hello,"Brat"'')
print('s3=\r\'hello,\"Brat\"\'')
print('s3=',\r\'hello,\"Brat\"\'')
print('s3=',\r\'hello,\"Brat\"\')
print('s3=','\r\'hello,\"Brat\"\'')
print('s3=','r\'hello,\"Brat\"\'')
print('s2=','\'hello,\\\'Adam\\\'')
print('s2=','\'hello,\\\'Adam\\\'\'')
print('s4=',r'''\''')
'''
print('s4=',r'''\'''hello,)
Lisa!''')
print('s4=',r'''\'''hello,
Lisa!'''
print('s4=',r'''\'''hello,
Lisa!''')
print('s4=',\r'''\'''hello,
print('s4=','r'''\'''hello,
print('s4=',r'''\'''hello,
Lias!''')
print('s4=','r'''\'''hello,
print('s4=','r'''\'''hello,'
print('s4=','\r'''\'''hello,
print('s4=','r'''\'''hello,
print('s4=',r'''\'''hello,
Liad!''')
print('s4=','r\'''hello,
print('s4=','r'''hello,
print('s4=',r'''\'''hello,
LIA!\'''''')
print('s4=',r''''''hello,
print('s4=',r'''hello,
Lia!'''
)
print('s4=',r'''hello,
LI!''')
print('s4=',r'''\'\'\'hello,
Lias!\'\'\''''
0)
print('s4=',r'''\'\'\'hello,
Lia!\'\'\'''')
print('s4=',r''''''hello,
print('s4=',r'''r''''hello,
print('s4=',r''''hello,
Lir!'''')
print('s4=',r'''''''hello,
print('s4=',r''''hello,'''
Lia!'''')
)
ord('A')
ord('ä¸­')
char(66)
chr(66)
chr(25991)
'\u4e2d\u6587'
'ABC'.encode('ascii')
'ä¸­æ–‡'.encode('utf-8')
'ä¸­æ–‡'.encode('ascii')
b'ABC'.decode('ascii')
b'\xe4\xb8\xad\xe6\x96\x87'.decode('utf-8')
len('ABC')
len('ä¸­æ–‡')
len('ä¸­æ–‡'.encode('utf-8'))
len(b'ABC')
len(b'\xe4\xb8\xad\xe6\x96\x87')
# -*- coding: utf-8 -*-
'hello,%s'%'world'
'hi,%s,you have $%d.'%('Michael',10000)
'hi,%s,you have $%d.'%'Michael'
'hi,%s,you have .'%'Michael'
'%2d-%02d' % (3,1)
'%.2f' % 3.1415926
'Age: %s. Gender: %s' % (25,True)
'growth rate: %d %%' %7
'growth rate: % %%' %7
'growth rate: d %%' %7
'growth rate: %d %%' %7
s1=72
s2=85
r=85/72
print ('%s \'s rate is : %f')
print ('%s \'s rate is : %f',(xiaoming,r))
print (' rate is : %f',r)
print (' rate is : %.2f',r)
print (' rate is :' %.2f,r)
print (' rate is :' %.2f r)
print (' rate is :' %.2fr)
print (' rate is :%s' %.2f r)
print (' rate is :%s' %f r)
print (' rate is :%.2f'r)
print (' rate is :%.2f',r)
print (' rate is :',r)
print (' rate is :%.2f' % r)
print (' rate is : %.2f' % r)
print (' rate is : %.2f' %%r)
print (' rate is : %.2f' %r)
print (' rate is : %.2f%%' %r)
print (' rate is : %.2f%' %r)
print (' rate is : %.2f%%' %r)
print 
len('ä¸­æ–‡')
classmates = ['Michael','Bob','Tracy']
classmates
len(classmates)
classmates[0]
classmates[1]
classmates[2]
classmates[3]
len(classmates)-1
len(classmates) - 1
classmates[-1]
classmates.append('Adam')
classmates
classmates.insert(1,'Jack')
classmates
classmates.pop()
classmates
classmates.pop(1)
classmates
classmates [1]='Sarah'
classmates
L=['Apple',123,True]
len[L]
len(L)
s=['python','java',['asp','php'],'scheme']
len(s)
p=['asp','php']
s=['python','java',p,'scheme']
L=[]
len(L)
classmates
t=(1,2)
t
t=()
t
t=(1)
t
t=(1,)
t
t= ('a','b',['A','B'])
t[2][0] = 'X'
t[2][1] = 'Y'
T
t
L=[
['Apple','Google','Microsoft',
L=[
['Apple','Google','Microsoft'],
['Java','Python','Ruby','PHP'],
['Adam','Bart','Lisa']
]
L(1)
L
len(L)
L[0][0]
L[1][1]
L[2][2]
d=['A':90,'B':100,'C':101]
d={'A':90,'B':100,'C':101}
d['B']
d['Adam']=67
d['Adam']
d['D']
'D' in d
'C' in d
d.get('D')
'D' in d
d.get('D',-1)
'D' in d
d[-1]
d.pop('B')
d
d['Asia']=120
d
d.pop('Asia')
d
key=[1,2,3]
d[key]='a list'
s=set([1,2,3])
s
s=set{[1,1,2,2,3,3]}
s
s=set([1,1,2,2,3,3])
s
s.add(4)
s
s.add(5)
s
s.add(4)
s
s1=set([1,2,3])
s2=set([2,3,4])
s1&s2
s1|s2
a
a=['c','b','a']
a
a.sort()
a
a='abc'
a.replace('a','A')
a
b=a.replace('a','A')
A
a
b
d=(1,2,3)
d
d=(1,[2,3])
d
s=set(1,2,3)
s=set(1,[2,3])
s=set([1,2,3])
s
s=set([1,[2,3]])
hex(255)
hex(1000)
bool()
bool('')
bool('1')
bool(1)
def my_abs(x)
def my_abs(x):
	if x>=0:
		return x
	else:
		return -x
my_abs(1)
my_abs(5)
my_abs(-5)
from abstest import my_abs
def nop():
	pass
if age >= 18:
	pass
my_abs(1,2)
my_abs('A')
def my_abs(x):
	if x>=0:
		return x
	else:
		return -x
my_abs('A')
my_abs(1,2)
abs('A')
def enroll(name,gender):
	print ('name:',name)
	print ('gender:',gender)
enroll('Sarah','F')
def enroll(name,gender,age=6,city='Beijing'):
	print('name:',name)
	print('gender:',gender)
	print('age:',age)
	print('city:',city)
enroll('Sarah','F')
enroll('Bob','M',7)
enroll('Bob','M',sangdong)
enroll('Bob','M')
enroll('Bob','M',age,Nanning)
enroll('Bob','M',6,Nanning)
enroll('Bob','M',6)
enroll('Bob','M',city='Tianjing')
def add_end(L=[]):
	L.append('END')
	return L
add_end(L=[1,2,3])
add_end(L=['x','y','z'])
add_end()
def add_end(L=None):
	if L is None:
		L=[]
	L.append('END')
	return L
add_end()
add_end(1)
add_end([1])
add_end([13])
def calc(numbers):
	sum=0
	for n in numbers:
		sum=sum+n*n
	return sum
calc([2,2,3,1])
calc((2,2,3,1))
calc(2,2,3,1)
calc(2,2,3)
calc(2 ,2 ,3)
calc(2)
calc(1 ,2 ,3)
calc([1 ,2 ,3])
def calc(*numbers):
	sum=0
	for n in numbers:
		sum=sum+n*n
	return sum
calc(1 ,2 ,3)
calc(1 ,2 )
calc()
nums=[1,2,3]
calc(nums[0],nums[1],nums[2])
nums=[1,2,3]
calc(*nums)
def person(name,age,**kw):
	print('name:',name,'age:',age,'other:',kw)
person('Michael',30)
person('Michael',30,city='Beijing')
person('Adam',45,gender='M','job':'Engineer')
person('Adam',45,gender='M',job='Engineer')
extra={'city':'Beijing','job':'Engineer'}
person('Jack',24,city=extra['city'],job=extra['job'])
extra={'city':'Beijing','job':'Engineer'}
person('Jack',24,**extra)
def person(name,age,**kw):
	if 'city' in kw:
		pass
	if 'job' in kw:
		pass
	print('name:',name,'age:',age,'other:',kw)
person('Jack',24,city='Beijing',addr='chaoyang',zipcode=123456)
def person(name,age,*,city,job):
	print(name,age,city,job)
person('Jack',24,city='Beijing',job='Engineer')
def person(name,age,*args,city,job):
	print(name,age,args,city,job)
	print('Jack',24,'Beijing','Engineer')
def persom(name,age,*,city='Beijing',job):
	print(name,age,city,job)
person('Jack',24,job='Engineer')
def person(name,age,*,city='Beijing',job):
	print(name,age,city,job)
person('Jack',24,job='Engineer')
def f1(a,b,c=0,*args,**kw):
	print('a=',a,'b=',b,'c=',c,'args','kw=',kw)
def f2(a,b,c=0,*,d,**kw):
	print('a=',a,'b=',b,'c=',c,'d=',d,'kw=',kw)
f1(1,2)
def f1(a,b,c=0,*args,**kw):
	print('a=',a,'b=',b,'c=',c,'args','kw=',kw)
f1(1,2)
f1(1,2,c=3)
f1(1,2,3)
f1(1,2,3,'a','b')
f1(1,2,3,'a','b',x=100)
f2(1,2,d=99,ext=None)
f1(1,2,3,'a','b',x=100)
f1(1,2,3,a,b,x=100)
f1(1,2,3,[a],[b],x=100)
f1(1,2,3,(a),(b),x=100)
f1(1,2,3,'a','b',x=100)
def f1(a,b,c=0,*args,**kw):
	print('a=',a,'b=',b,'c=',c,'args=','kw=',kw)
f1(1,2,3,'a','b',x=100)
	print('a=',a,'b=',b,'c=',c,'args=',args,'kw=',kw)
def f1(a,b,c=0,*args,**kw):
	print('a=',a,'b=',b,'c=',c,'args=',args,'kw=',kw)
f1(1,2,3,'a','b',x=100)
args=(1,2,3)
kw={'d':99,'x':'#'}
f1(*args,**kw)
args=(1,2,3,4)
f1(*args,**kw)
args=(1,2,3)
kw={'d':88,'x':'#'}
f2(*args,**kw)
L(f2)
f2
def ·
f2
def f2
def fact(n):
	if n=1:
def fact(n):
	if n==1:
		return 1
	return n*fact(n-1)
fact(1)
fact(3)
fact(5)
fact(100)
5*(4*(3*(2*fact(1))))
fact(10000)
L=['Michael','Sarah','Tracy','Bob','Jack']
L
L[2]
r=[]
n=3
for i in range(n):
	r.append(L[i])
r
L[0:3]
L[3]
L[:3]
L[1:3]
L[-2:]
L
L[-2:0]
L[-2:-1]
L[-2:]
L=list(range(100))
L
L=list(range(10))
L
L=list(range(100))
L
L[:10]
L[-10:]
L[1:20]
L[10:20]
L[:10:2]
L[:]
(0,1,2,3,4,5)[:3]
(0,1,2,3,4,5)
[:4]
[:2]
ABCDEFG'[:3]
'ABCDEFG'[:3]
'ABCDEFG'[:5]
'ABCDEFG'[::2]
d={'a':1,'b':2,'c':3}
for key in d:
	print(key)
d={'a','b','c'}
for key in d:
	print(key)
d={1,2,3}
for n in d:
	prin(n)
	print(n)
d={1,2,3}
for n in d:
	print (n)
d={'a':1,'b':2,'c':3}
	for key in d:
d={'a':1,'b':2,'c':3}
for key in d:
	print (key)
for value  in d.values():
	print(value)
for k,v in d.items():
	print(k,v)
for ch in 'ABC':
	print(ch)
for she in 'ABC':
	print(she)
d={'a':1,'b':2,'c':3}
for k in d:
	print(k)
d={'a':1,'b':2,'c':3}
for n in d:
	print(n)
d={'a':1,'b':2,'c':3}
	for a in d.values():
for a in d.values():
	print (a)
from collections import Iterable
isinstance('abc',Iterable)
isinstance([1,2,3],Iterable)
isinstance(123,Iterable)
for i,value in enumerate(['A','B','C']):
	print(i,value)
for x,y in [(1,1),(10,30),(2,6)]
for x,y in [(1,1),(10,30),(2,6)]:
	print(x,y)
list[1,2,3,4,5,6,7,8,9,10]
list (range(1,11))
L=[]
for x in range(1,11):
	L.append(x*x)
L
[x*x for x in range(1,11)]
[x*x for x in range(2,11)]
[x*x for x in range(2,10)]
[x*2 for x in range(1,101)]
[x*(x-1) for x in range(1,101)]
[x*3 for x in range(1,101)]
[x** for x in range(1,101)]
[x*x for x in range(1,11) if x%2 ==0]
[m+n for m in 'ABC' for n in 'XYZ']
import os
[d for d in os.listdir('.')]
d={'x':'A','y':'B','z':'C'}
for k,v in d.items():
	print(k,'=',v)
d={'x':'A','y':'B','z':'C'}
[k + '=' + v for k,v in d.items()]
L=['Hello','world','IBM','Apple']
[s.lower() for s in L]
X='abx'
y=123
isinstance(x,str)
X='abc'
isinstance(x,str)
isinstance(y,str)
isinstance(X,str)
L=['Hello','World',18,'Apple',None]
[s.lower() for s in L]
isinstance(L,str)
L2=[s.lower() for s in L1 if isinstance(s,str)==True]
L2=[s.lower() for s in L if isinstance(s,str)==True]
print (L2)
L=[x*x for x in range(10)]
L
g=(x*x for x in range(10))
g
next(g)
g=(x*x for x in range(10))
for n in g:
	print(n)
g
def fib(max):
	n,a,b=0,0,1
	while n<max:
		yield b
		a,b=b,a+b
		n=n+1
	return 'done'
fib(10)
f=fib(6)
f
next(f)
def odd():
	print('step 1')
	yield 1
	print('step 2')
	yield (3)
	print('step 3')
	yield (5)
o=odd()
next(o)
for n in fib(6):
	print(n)
g=fib(6)
while True:
	try:
		x=next(g)
		print('g:',x)
	except StopIteration as e:
	print('Generator return value:',e.value)
g=fib(6)
	
	try:
		x=next(g)
		print('g:',x)
	except StopIteration as e:
		print('Generator return value:',e.value)
		break
abs(-10)
abs=10
abs(-10)
def add(x,y,f)
def add(x,y,f):
	return f(x)+f(y)
x=-5
y=6
f=abs
f(x)+f(y)
add(-5,6,abs)
def f(x):
	return x*x
r= map(f,[1,2,3,4,5,6,7,8,9])
list(r)
4%2
1/4
3+2+1-5+4%2-1/4+6
5/2
5%2
i=10
j=2
i/j
i%j
print('%+10x' % 10)
print('%-10x' % 10)
print('% 10x' % 10)
print('%6.3f' % 2.3)
print('%.*f' % 4, 1.2)
print('%.*f' % (4, 1.2))
print('%.*f' % 4, 1.2)
print ("I lovw")
print (I lovw)
print ("I'm lovw")
print (""I'm lovw"")
print (r'\t\r')
pydoc input
input
print(input)
argv
pydoc open
pydoc (open)
open
print("open")
print(open)
open
open()
def fun()
def fun():
type(fun)
open(ex15_sample.txt)
txt=open(ex15_sample.txt)
filename=input()
filename=input():
filename=input()
txt=open(filename)
txt.read()
def filename
def filename()
f=open(''
f=open('ex15_sample.txt','r')
f.read()
f.close()
with open('ex15_sample','r') as f:
	print(f.read())
with open('ex15_sample.txt','r') as f:
	print (f.read())
f.close()
pydoc close
pydoc (close)
close
print(close)
(close)
import
print(import)
import shutil
shutil.copy(copied-3.txt,copied-4.txt)
shutil.copy(test.txt,copied-4.txt)
shutil.copy(test.txt,copi.txt)
test.txt
(test.txt)
cat test.txt - copied-4.txt
import test.txt
